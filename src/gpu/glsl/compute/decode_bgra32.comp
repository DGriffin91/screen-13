#version 450

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(push_constant) uniform PushConstants { layout(offset = 0) uint stride; }
push_constants;

layout(set = 0, binding = 0, std430) readonly buffer BGRABuffer {
    uint bgra_buffer[];
};

layout(set = 0, binding = 1, rgba8ui) restrict writeonly uniform uimage2D image;

void main() {
    uint bgra = bgra_buffer[gl_GlobalInvocationID.x +
                            gl_GlobalInvocationID.y * push_constants.stride];

    uvec4 rgba;
    rgba.a = (bgra >> 24) & 0xff;
    rgba.r = ((bgra >> 16) & 0xff);
    rgba.g = ((bgra >> 8) & 0xff);
    rgba.b = (bgra & 0xff);

    imageStore(image,
               ivec2(gl_GlobalInvocationID.x,
                     imageSize(image).y - gl_GlobalInvocationID.y - 1),
               rgba);
}
