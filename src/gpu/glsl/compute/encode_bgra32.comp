#version 450

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(push_constant) uniform PushConstants { layout(offset = 0) uint stride; } push_constants;

layout(set = 0, binding = 0, std430) restrict writeonly buffer BGRABuffer {
    uint bgra_buffer[];
};

layout(set = 0, binding = 1, rgba8ui) readonly uniform uimage2D image;

void main() {
    uvec4 rgba = imageLoad(
        image, ivec2(gl_GlobalInvocationID.x,
                     imageSize(image).y - gl_GlobalInvocationID.y - 1));
    bgra_buffer[gl_GlobalInvocationID.x +
                gl_GlobalInvocationID.y * push_constants.stride] =
        rgba.a << 24 | rgba.r << 16 | rgba.g << 8 | rgba.b;
}
