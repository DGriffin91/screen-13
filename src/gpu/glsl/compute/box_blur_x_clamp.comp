#version 450

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(push_constant) uniform PushConstants { layout(offset = 0) uint radius; } push_constants;

layout(set = 0, binding = 0, rgba8) readonly uniform image2D read_image;
layout(set = 0, binding = 1,
       rgba8) restrict writeonly uniform image2D write_image;

void main() {
    uint width = imageSize(read_image).x;
    vec4 accumulator = vec4(0);
    uint count = 0;

    for (; count < width && count < push_constants.radius;)
        accumulator +=
            imageLoad(read_image, ivec2(count++, gl_GlobalInvocationID.y));

    for (uint x = 0; x < width; x++, count++) {
        imageStore(write_image, ivec2(x, gl_GlobalInvocationID.y),
                   accumulator / float(count));
        accumulator += imageLoad(
            read_image, ivec2(min(width - 1, x + push_constants.radius + 1),
                              gl_GlobalInvocationID.y));

        if (x > push_constants.radius) {
            accumulator -=
                imageLoad(read_image, ivec2(x - push_constants.radius,
                                            gl_GlobalInvocationID.y));
            count--;
        }
    }
}
