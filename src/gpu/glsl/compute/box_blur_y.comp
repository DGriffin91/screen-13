#version 450

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(push_constant) uniform PushConstants { layout(offset = 0) uint radius; }
push_constants;

layout(set = 0, binding = 0, rgba8) readonly uniform image2D read_image;
layout(set = 0, binding = 1,
       rgba8) restrict writeonly uniform image2D write_image;

void main() {
    vec4 accumulator = vec4(0);
    for (uint y = 0; y < push_constants.radius; y++)
        accumulator += imageLoad(read_image, ivec2(gl_GlobalInvocationID.x, y));

    float per_pixel = 1 / float((push_constants.radius << 1) + 1);
    uint height = imageSize(read_image).y;
    for (uint y = 0; y < height; y++) {
        accumulator += imageLoad(read_image, ivec2(gl_GlobalInvocationID.x,
                                                   y + push_constants.radius));
        imageStore(write_image, ivec2(gl_GlobalInvocationID.x, y),
                   accumulator * per_pixel);
        accumulator -= imageLoad(read_image, ivec2(gl_GlobalInvocationID.x,
                                                   y - push_constants.radius));
    }
}
