#version 460 core

// Adapted from:
// https://github.com/gl-transitions/gl-transitions/blob/master/transitions/
// b62319705bc54ab2597c36a3694c2476f8f52495
//
// Author:gre
// License: MIT
// forked from https://gist.github.com/benraziel/c528607361d90a072e98

#include "_defs.glsl"

layout(push_constant) uniform PushConstants {
    layout(offset = 0) float progress;

    // zero disable the stepping
    layout(offset = 4) int steps; // = 50

    // minimum number of squares (when the effect is at its higher level)
    layout(offset = 8) ivec2 squaresMin; // = ivec2(20)
} push_const;

float d = min(push_const.progress, 1.0 - push_const.progress);
float dist = push_const.steps>0 ? ceil(d * float(push_const.steps)) / float(push_const.steps) : d;
vec2 squareSize = 2.0 * dist / vec2(push_const.squaresMin);

vec4 transition(vec2 uv) {
  vec2 p = dist>0.0 ? (floor(uv / squareSize) + 0.5) * squareSize : uv;
  return mix(getFromColor(p), getToColor(p), push_const.progress);
}

#include "_main.glsl"
